<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo+GitHub打造属于自己的博客</title>
    <link href="/2020/12/24/Hexo-GitHub%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2020/12/24/Hexo-GitHub%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="配置GitHub-Hexo博客的步骤"><a href="#配置GitHub-Hexo博客的步骤" class="headerlink" title="配置GitHub-Hexo博客的步骤"></a>配置GitHub-Hexo博客的步骤</h1><p>[toc]</p><h2 id="1、首先配置GitHub"><a href="#1、首先配置GitHub" class="headerlink" title="1、首先配置GitHub"></a>1、首先配置GitHub</h2><ul><li><p><strong>申请一个GitHub账户，然后登陆到账户</strong></p><p><img src="/2020/12/24/Hexo-GitHub%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image-20201223204856625.png" alt="image-20201223204856625"></p></li><li><p><strong>创建一个与用户名一样地仓库</strong>: <strong><em>Dylanjor.github.io</em></strong></p></li><li><p><strong>git pull origin master</strong> 修改点东西</p></li><li><p><strong>git add . , git commit -m ‘init’ , git push origin master</strong> </p></li><li><p>然后打开GitHub网站 找到 <strong><em>Setting</em></strong> </p><p><img src="/2020/12/24/Hexo-GitHub%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image-20201223210447226.png" alt="image-20201223210447226"></p></li></ul><p>​       选中<strong><em>master</em>__分支然后点</strong><em>Save</em>__</p><ul><li>然后访问<strong><em><a href="https://dylanjor.github.io/">https://dylanjor.github.io</a></em></strong></li><li><strong>成功访问</strong></li></ul><h2 id="2、搭配Hexo"><a href="#2、搭配Hexo" class="headerlink" title="2、搭配Hexo"></a>2、搭配Hexo</h2><ul><li><p><strong>Git Bash安装全局hexo:</strong> <em>npm install -g hexo</em></p></li><li><p>新建一个空文件夹(<em>hexo</em>)<strong>打开Git Bash</strong> <em>cd hexo</em> ,  <em>hexo init</em></p></li><li><p>```bash<br>$ hexo g #生成<br>$ hexo s #运行<br>$ hexo d #推送到GitHub远程<br>$ hexo clean #</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs oxygene"><br>- 找一个好看的主题这里使用的是__*hexo-theme-fluid*__<br><br>- git clone https:<span class="hljs-comment">//github.com/fluid-dev/hexo-theme-fluid.git themes/fluid</span><br><br>- 然后将_hexo_下的__config.yml_ theme改成_fluid_与文件名一致<br><br>  ```bash<br>  pretty_urls:<br>    trailing_index: <span class="hljs-keyword">false</span> # <span class="hljs-keyword">Set</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">false</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">remove</span> trailing <span class="hljs-string">&#x27;index.html&#x27;</span> <span class="hljs-keyword">from</span> permalinks<br>    trailing_html: <span class="hljs-keyword">true</span> # <span class="hljs-keyword">Set</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">false</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">remove</span> trailing <span class="hljs-string">&#x27;.html&#x27;</span> <span class="hljs-keyword">from</span> permalinks<br>  # 主题<br>  theme: hexo-theme-fluids<br>  deploy:<br>    <span class="hljs-keyword">type</span>: git<br>    repo: git@github.com:Dylanjor/Dylanjor.github.io.git<br>    branch: master<br></code></pre></td></tr></table></figure></li><li><p>执行<em>hexo clean,hexo g,hexo s</em><a href="http://localhost:4000/">预览</a></p></li><li><p><strong>注意:</strong> 这里要下载 <code>npm install hexo-deployer-git --save</code> 不然会报错</p></li><li><p>最后没问题就可以<code>hexo clean,hexo g,hexo d</code>推送上去 <a href="https://dylanjor.github.io/">访问地址</a></p></li></ul><h2 id="3、Ps-上传图片-借鉴地址"><a href="#3、Ps-上传图片-借鉴地址" class="headerlink" title="3、Ps:上传图片 借鉴地址"></a>3、Ps:上传图片 <a href="https://www.jianshu.com/p/f72aaad7b852">借鉴地址</a></h2><ul><li><p>下载插件：<code>npm install hexo-asset-image --save</code></p></li><li><p>打开hexo的配置文件_config.yml</p></li><li><p>找到post_asset_folder，把这个选项从false改成true</p></li><li><pre><code class="undefined">找到 /node_modules/hexo-asset-image/index.js<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><br>- 将内容更换为<br><br>  ```<span class="javascript">bash</span><br><span class="javascript"><span class="hljs-meta">  &#x27;use strict&#x27;</span>;</span><br><span class="javascript">  <span class="hljs-keyword">var</span> cheerio = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cheerio&#x27;</span>);</span><br><span class="javascript">  </span><br><span class="javascript">  <span class="hljs-comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPosition</span>(<span class="hljs-params">str, m, i</span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">  </span><br><span class="javascript">  <span class="hljs-keyword">var</span> version = <span class="hljs-built_in">String</span>(hexo.version).split(<span class="hljs-string">&#x27;.&#x27;</span>);</span><br><span class="javascript">  hexo.extend.filter.register(<span class="hljs-string">&#x27;after_post_render&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> config = hexo.config;</span><br><span class="javascript">    <span class="hljs-keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="javascript">          <span class="hljs-keyword">var</span> link = data.permalink;</span><br><span class="javascript">      <span class="hljs-keyword">if</span>(version.length &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">Number</span>(version[<span class="hljs-number">0</span>]) == <span class="hljs-number">3</span>)</span><br><span class="javascript">         <span class="hljs-keyword">var</span> beginPos = getPosition(link, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">1</span>) + <span class="hljs-number">1</span>;</span><br><span class="javascript">      <span class="hljs-keyword">else</span></span><br><span class="javascript">         <span class="hljs-keyword">var</span> beginPos = getPosition(link, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">3</span>) + <span class="hljs-number">1</span>;</span><br><span class="javascript">      <span class="hljs-comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> endPos = link.lastIndexOf(<span class="hljs-string">&#x27;/&#x27;</span>) + <span class="hljs-number">1</span>;</span><br><span class="javascript">      link = link.substring(beginPos, endPos);</span><br><span class="javascript">  </span><br><span class="javascript">      <span class="hljs-keyword">var</span> toprocess = [<span class="hljs-string">&#x27;excerpt&#x27;</span>, <span class="hljs-string">&#x27;more&#x27;</span>, <span class="hljs-string">&#x27;content&#x27;</span>];</span><br><span class="javascript">      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> key = toprocess[i];</span><br><span class="javascript">   </span><br><span class="javascript">        <span class="hljs-keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="javascript">          ignoreWhitespace: <span class="hljs-literal">false</span>,</span><br><span class="javascript">          xmlMode: <span class="hljs-literal">false</span>,</span><br><span class="javascript">          lowerCaseTags: <span class="hljs-literal">false</span>,</span><br><span class="javascript">          decodeEntities: <span class="hljs-literal">false</span></span><br><span class="javascript">        &#125;);</span><br><span class="javascript">  </span><br><span class="javascript">        $(<span class="hljs-string">&#x27;img&#x27;</span>).each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">          <span class="hljs-keyword">if</span> ($(<span class="hljs-built_in">this</span>).attr(<span class="hljs-string">&#x27;src&#x27;</span>))&#123;</span><br><span class="javascript">              <span class="hljs-comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="javascript">              <span class="hljs-keyword">var</span> src = $(<span class="hljs-built_in">this</span>).attr(<span class="hljs-string">&#x27;src&#x27;</span>).replace(<span class="hljs-string">&#x27;\\&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>);</span><br><span class="javascript">              <span class="hljs-keyword">if</span>(!<span class="hljs-regexp">/http[s]*.*|\/\/.*/</span>.test(src) &amp;&amp;</span><br><span class="javascript">                 !<span class="hljs-regexp">/^\s*\//</span>.test(src)) &#123;</span><br><span class="javascript">                <span class="hljs-comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="javascript">                <span class="hljs-comment">// In addition, to support multi-level local directory.</span></span><br><span class="javascript">                <span class="hljs-keyword">var</span> linkArray = link.split(<span class="hljs-string">&#x27;/&#x27;</span>).filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">elem</span>)</span>&#123;</span><br><span class="javascript">                  <span class="hljs-keyword">return</span> elem != <span class="hljs-string">&#x27;&#x27;</span>;</span><br><span class="javascript">                &#125;);</span><br><span class="javascript">                <span class="hljs-keyword">var</span> srcArray = src.split(<span class="hljs-string">&#x27;/&#x27;</span>).filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">elem</span>)</span>&#123;</span><br><span class="javascript">                  <span class="hljs-keyword">return</span> elem != <span class="hljs-string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="hljs-string">&#x27;.&#x27;</span>;</span><br><span class="javascript">                &#125;);</span><br><span class="javascript">                <span class="hljs-keyword">if</span>(srcArray.length &gt; <span class="hljs-number">1</span>)</span><br><span class="javascript">                  srcArray.shift();</span><br><span class="javascript">                src = srcArray.join(<span class="hljs-string">&#x27;/&#x27;</span>);</span><br><span class="javascript">                $(<span class="hljs-built_in">this</span>).attr(<span class="hljs-string">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class="javascript">                <span class="hljs-built_in">console</span>.info&amp;&amp;<span class="hljs-built_in">console</span>.info(<span class="hljs-string">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class="javascript">              &#125;</span><br><span class="javascript">          &#125;<span class="hljs-keyword">else</span>&#123;</span><br><span class="javascript">              <span class="hljs-built_in">console</span>.info&amp;&amp;<span class="hljs-built_in">console</span>.info(<span class="hljs-string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="javascript">              <span class="hljs-built_in">console</span>.info&amp;&amp;<span class="hljs-built_in">console</span>.info($(<span class="hljs-built_in">this</span>));</span><br><span class="javascript">          &#125;</span><br><span class="javascript">        &#125;);</span><br><span class="javascript">        data[key] = $.html();</span><br><span class="javascript">      &#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;);</span><br></code></pre></td></tr></table></figure>现在就可以插入图片了，比如hexo new post photo之后就在source/_posts生成photo.md文件和photo文件夹，我们把要插入的图片复制到photo文件夹内</code></pre></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">![这是代替图片的文字，随便写](head.jpeg)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>GitHub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ComingOrPast</title>
    <link href="/2020/12/20/ComingOrPast/"/>
    <url>/2020/12/20/ComingOrPast/</url>
    
    <content type="html"><![CDATA[<h1 id="ComingOrPast简介"><a href="#ComingOrPast简介" class="headerlink" title="ComingOrPast简介"></a>ComingOrPast简介</h1><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="初始表格"><a href="#初始表格" class="headerlink" title="初始表格"></a>初始表格</h2><h3 id="one-​用户表-Dlx-UserTable"><a href="#one-​用户表-Dlx-UserTable" class="headerlink" title=":one: ​用户表(Dlx_UserTable)"></a>:one: ​用户表(Dlx_UserTable)</h3><table><thead><tr><th>ID</th><th>UserName</th><th>UserPassWord</th><th>UserTrueName</th><th>UserPosition</th><th>UserLikes</th><th>UserAges</th><th>UserGender</th><th>UserMotto</th><th>UserIsDeleted</th><th>UserLastLoginTime</th><th>CreateTime</th><th>DeletedTime</th><th>UserProfile</th></tr></thead><tbody><tr><td>ID</td><td>用户名</td><td>用户密码</td><td>用户真实姓名</td><td>用户职位</td><td>用户喜好</td><td>用户年龄</td><td>用户性别</td><td>座右铭</td><td>用户是否已删除</td><td>最近一次登录时间</td><td>创建时间</td><td>删除时间</td><td>用户头像</td></tr></tbody></table><h3 id="two-登录日志-Dlx-LoginLogTable"><a href="#two-登录日志-Dlx-LoginLogTable" class="headerlink" title=":two: 登录日志(Dlx_LoginLogTable)"></a>:two: 登录日志(Dlx_LoginLogTable)</h3><table><thead><tr><th>ID</th><th>UserID</th><th>LoginTime</th><th>QuitTime</th><th>TotalTime</th></tr></thead><tbody><tr><td>ID</td><td>用户ID</td><td>登陆时间</td><td>退出时间</td><td>浏览总时长</td></tr></tbody></table><h3 id="three-浏览记录-Dlx-BrowseRecordsTable"><a href="#three-浏览记录-Dlx-BrowseRecordsTable" class="headerlink" title=":three: 浏览记录(Dlx_BrowseRecordsTable)"></a>:three: 浏览记录(Dlx_BrowseRecordsTable)</h3><table><thead><tr><th>ID</th><th>UserID</th><th>ContentID</th><th>BrowseTime</th><th>IsComment</th><th>CommentTime</th><th>IsLike</th><th>LikeTime</th><th>IsFavorites</th><th>FavoritesTime</th></tr></thead><tbody><tr><td>ID</td><td>用户ID</td><td>内容ID</td><td>浏览时间</td><td>是否评论</td><td>评论时间</td><td>是否喜欢</td><td>喜欢时间</td><td>是否收藏</td><td>收藏时间</td></tr></tbody></table><h3 id="four-图片表-Dlx-PictureTable"><a href="#four-图片表-Dlx-PictureTable" class="headerlink" title=":four: 图片表(Dlx_PictureTable)"></a>:four: 图片表(Dlx_PictureTable)</h3><table><thead><tr><th>ID</th><th>ContextID</th><th>ClassID</th><th>PictureUrlOrData</th><th>CreateTimes</th><th>CreatePerson</th><th>IsDeleted</th><th>DeletedTime</th></tr></thead><tbody><tr><td>ID</td><td>内容ID</td><td>分类ID</td><td>照片地址或者是DataBase64</td><td>上传时间</td><td>上传人</td><td>是否删除</td><td>删除时间</td></tr></tbody></table><h3 id="five-问题表-Dlx-ProblemTable"><a href="#five-问题表-Dlx-ProblemTable" class="headerlink" title=":five: 问题表(Dlx_ProblemTable)"></a>:five: 问题表(Dlx_ProblemTable)</h3><table><thead><tr><th>ID</th><th>ProblemContext</th><th>ClassID</th><th>PictureID</th><th>CreateTime</th><th>CreatePersonID</th><th>IsDelete</th><th>DeletedTime</th></tr></thead><tbody><tr><td>ID</td><td>问题内容</td><td>分类ID</td><td>图片ID</td><td>创建时间</td><td>创建人ID</td><td>是否删除</td><td>删除时间</td></tr></tbody></table><h3 id="six-答案表-Dlx-AnswerTable"><a href="#six-答案表-Dlx-AnswerTable" class="headerlink" title=":six: 答案表(Dlx_AnswerTable)"></a>:six: 答案表(Dlx_AnswerTable)</h3><table><thead><tr><th>ID</th><th>AnswerContext</th><th>ContextID</th><th>CreateTime</th><th>CreatePerson</th><th>IsDelete</th><th>DeletedTime</th></tr></thead><tbody><tr><td>ID</td><td>答案内容</td><td>问题ID</td><td>创建时间</td><td>创建人</td><td>是否删除</td><td>删除时间</td></tr></tbody></table><h3 id="seven-讨论表-Dlx-DiscussTable"><a href="#seven-讨论表-Dlx-DiscussTable" class="headerlink" title=":seven: 讨论表(Dlx_DiscussTable)"></a>:seven: 讨论表(Dlx_DiscussTable)</h3><table><thead><tr><th>ID</th><th>DiscussContext</th><th>AnswerID</th><th>ProblemID</th><th>CreatePersonID</th><th>ToPersonID</th><th>CreateTime</th></tr></thead><tbody><tr><td>ID</td><td>讨论内容</td><td>答案ID</td><td>问题ID</td><td>创建人ID</td><td>答案ID</td><td>创建时间</td></tr></tbody></table><h3 id="eight-喜欢表-Dlx-LikesTable"><a href="#eight-喜欢表-Dlx-LikesTable" class="headerlink" title=":eight: 喜欢表(Dlx_LikesTable)"></a>:eight: 喜欢表(Dlx_LikesTable)</h3><table><thead><tr><th>ID</th><th>LikeTypeID</th><th>LikesContextID</th><th>CreatePersonID</th><th>CreateTime</th><th>IsDelete</th><th>DeletedTime</th></tr></thead><tbody><tr><td>ID</td><td>是内容还是问题</td><td>喜好内容</td><td>创建人ID</td><td>创建时间</td><td>是否删除</td><td>删除时间</td></tr></tbody></table><h3 id="nine-内容表-Dlx-ContextTable"><a href="#nine-内容表-Dlx-ContextTable" class="headerlink" title=":nine: 内容表(Dlx_ContextTable)"></a>:nine: 内容表(Dlx_ContextTable)</h3><table><thead><tr><th>ID</th><th>Context</th><th>ClassID</th><th>PictureID</th><th>CreateTime</th><th>CreatePersonID</th><th>IsDelete</th><th>DeletedTime</th><th>IsNoComments</th></tr></thead><tbody><tr><td>ID</td><td>问题内容</td><td>分类ID</td><td>图片ID</td><td>创建时间</td><td>创建人ID</td><td>是否删除</td><td>删除时间</td><td>是否禁止评论</td></tr></tbody></table><h3 id="keycap-ten-分类表-Dlx-Classification"><a href="#keycap-ten-分类表-Dlx-Classification" class="headerlink" title=":keycap_ten:分类表(Dlx_Classification)"></a>:keycap_ten:分类表(Dlx_Classification)</h3><table><thead><tr><th>ID</th><th>IsParentClass</th><th>ParentID</th><th>ClassName</th><th>CreatePersonID</th><th>CreateTime</th><th>IsDelete</th><th>DeletedTime</th></tr></thead><tbody><tr><td>ID</td><td>是不是父ID</td><td>父分类ID</td><td>类别名称</td><td>创建人ID</td><td>创建时间</td><td>是否删除</td><td>删除时间</td></tr></tbody></table><h3 id="one-one-评论表"><a href="#one-one-评论表" class="headerlink" title=":one::one: 评论表"></a>:one::one: 评论表</h3><table><thead><tr><th>ID</th><th>IsParentID</th><th>ParentID</th><th>CommentContext</th><th>ContextID</th><th>CreatePersonID</th><th>CreateTime</th><th>IsDelete</th><th>DeletedTime</th></tr></thead><tbody><tr><td>ID</td><td>是不是父ID</td><td>父评论ID</td><td>评论内容</td><td>内容ID</td><td>创建人ID</td><td>创建时间</td><td>是否删除</td><td>删除时间</td></tr></tbody></table><h3 id="one-two-收藏表"><a href="#one-two-收藏表" class="headerlink" title=":one::two: 收藏表"></a>:one::two: 收藏表</h3><table><thead><tr><th>ID</th><th>ContextID</th><th>FavoritesType</th><th>CreatePersonID</th><th>CreateTime</th><th>IsDelete</th><th>DeletedTime</th></tr></thead><tbody><tr><td>ID</td><td>父分类ID</td><td>收藏类别是内容还是问题</td><td>创建人ID</td><td>创建时间</td><td>是否删除</td><td>删除时间</td></tr></tbody></table><h3 id="2020-12-20"><a href="#2020-12-20" class="headerlink" title="2020/12/20"></a>2020/12/20</h3><p>完成登录<br>完成注册</p>]]></content>
    
    
    <categories>
      
      <category>表结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ForMe</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>For-Vue</title>
    <link href="/2020/12/20/For-Vue/"/>
    <url>/2020/12/20/For-Vue/</url>
    
    <content type="html"><![CDATA[<h3 id="VUE、Elementui、Code的创建和使用"><a href="#VUE、Elementui、Code的创建和使用" class="headerlink" title="VUE、Elementui、Code的创建和使用"></a>VUE、Elementui、Code的创建和使用</h3><p>npm install 不然报错 web package dev server</p><p>1、打开vscode的终端ctrl+`;<br>2、安装全局vue-cli客户端：npm install -g vue-cli<br>3、创建vue项目：vue init webpack （projectName项目名字）   运行vue项目：npm run dev 需要切进项目中 cd Coffee-vue<br>4、安装ElementUI：npm i element-ui -S<br>5、引入至项目中：<img src="/2020/12/20/For-Vue/1585727261448.png" alt="1585727261448"></p><p>6、取消报错的红线<br>在项目中build（编译）文件夹下webpack.base.conf.js文件中注释掉eslint的内容<img src="/2020/12/20/For-Vue/1585728290551.png" alt="1585728290551"></p><p>7、<img src="/2020/12/20/For-Vue/1585800861965.png" alt="1585800861965"></p><p>需要将其注释掉不然会在页面中有其效果<br>8、将其初始化路径更改为我们需要的路由<img src="/2020/12/20/For-Vue/1585800926956.png" alt="1585800926956"></p><p>9、<br>点击图片并改变图片的路径：简单步骤(vue的路径使用需要加:例如 :src)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;img class&#x3D;&quot;menu&quot; v-on:click&#x3D; &quot;flag&#x3D;!flag&quot; :src&#x3D;&quot;flag?menupic:crosspic&quot;&gt;<br><br>export default&#123;<br>  data () &#123;<br>    return &#123;<br>      flag: true,<br>      menupic: require(&#39;..&#x2F;picture&#x2F;menu.png&#39;),<br>      crosspic: require(&#39;..&#x2F;picture&#x2F;Cross.png&#39;),<br>      logopic: require(&#39;..&#x2F;picture&#x2F;coffeelogo.png&#39;)<br>    &#125;<br>  &#125;,<br>  methods: &#123;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>10、注意进入cd Coffee-vue必须要和文件名保持一致<img src="/2020/12/20/For-Vue/1585812586935.png" alt="1585812586935"></p><p>不然会报错<br>11、<br>走马灯图片设置 图片使用外链加载 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!--卡片走马灯--&gt;<br>        &lt;el-carousel :interval&#x3D;&quot;4000&quot; type&#x3D;&quot;card&quot; height&#x3D;&quot;350px&quot;&gt;<br>          &lt;el-carousel-item v-for&#x3D;&quot;item in listpic&quot; :key&#x3D;&quot;item&quot; width&#x3D;&quot;100%&quot;&gt;<br>            &lt;img :src&#x3D;&#39;item&#39; width&#x3D;&quot;100%&quot;&gt;<br>          &lt;&#x2F;el-carousel-item&gt;<br>        &lt;&#x2F;el-carousel&gt;<br>&lt;!--vue数据--&gt;<br>data () &#123;<br>    return &#123;<br>      flag: true,<br>      showldiv: true,<br>      showmain: true,<br>      menupic: require(&#39;..&#x2F;picture&#x2F;Menu.png&#39;),<br>      crosspic: require(&#39;..&#x2F;picture&#x2F;Cross.png&#39;),<br>      logopic: require(&#39;..&#x2F;picture&#x2F;coffeelogo.png&#39;),<br>      coffeeface: require(&#39;..&#x2F;picture&#x2F;Coffee-Face.jpg&#39;),<br>      listpic: [(&#39;https:&#x2F;&#x2F;i1.fuimg.com&#x2F;715304&#x2F;395e39fc6dd0330a.png&#39;,<br>         &#39;https:&#x2F;&#x2F;i1.fuimg.com&#x2F;715304&#x2F;a598958f4083fc17.jpg&#39;,<br>         &#39;https:&#x2F;&#x2F;i1.fuimg.com&#x2F;715304&#x2F;40405d692956cfea.jpg&#39;,<br>         &#39;https:&#x2F;&#x2F;i2.tiimg.com&#x2F;715304&#x2F;3d05a666162c5531.jpg&#39;,<br>         &#39;https:&#x2F;&#x2F;i2.tiimg.com&#x2F;715304&#x2F;46ca868eb0fa445b.jpg&#39;,<br>         &#39;https:&#x2F;&#x2F;i1.fuimg.com&#x2F;715304&#x2F;958f42f82a306944.jpg&#39;)<br>      ]<br>    &#125;<br>  &#125;,<br></code></pre></td></tr></table></figure><p>12、npm run build编译后的提示 需要将文件夹直接放置在服务器上 不影响</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vue">Tip: built files are meant to be served over an HTTP server.<br>  Opening index.html over file:&#x2F;&#x2F; won&#39;t work.<br></code></pre></td></tr></table></figure><p>13、 main.js的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs vue">import Vue from &#39;vue&#39;<br>import App from &#39;.&#x2F;App&#39;<br>import router from &#39;.&#x2F;router&#39;<br>import ElementUI from &#39;element-ui&#39;<br>import &#39;element-ui&#x2F;lib&#x2F;theme-chalk&#x2F;index.css&#39;<br><br>Vue.config.productionTip &#x3D; false<br>Vue.use(ElementUI)<br>&#x2F;* eslint-disable no-new *&#x2F;<br>new Vue(&#123;<br>  &#x2F;&#x2F; el是index.html的div id<br>  el: &#39;#App&#39;,<br>  router,<br>  &#x2F;&#x2F; App模块是App.vue<br>  components: &#123; App &#125;,<br>  template: &#39;&lt;App&#x2F;&gt;&#39;<br>&#125;)<br></code></pre></td></tr></table></figure><p>index.html的内容为空</p><p>14、页面刷新的使用(在App页面中做定义)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div id&#x3D;&quot;app&quot;&gt;<br>    &lt;!-- &lt;img src&#x3D;&quot;.&#x2F;assets&#x2F;logo.png&quot;&gt; --&gt;<br>    &lt;router-view v-if&#x3D;&quot;isRouterAlive&quot;&#x2F;&gt;&lt;!--这个是必须要有的跳转的路由--&gt;<br>  &lt;&#x2F;div&gt;<br>&lt;&#x2F;template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &#39;App&#39;,<br>  provide () &#123;<br>    return &#123;<br>      reload: this.reload &#x2F;&#x2F; 刷新定义<br>    &#125;<br>  &#125;,<br>  data () &#123;<br>    return &#123;<br>      isRouterAlive: true<br>    &#125;<br>  &#125;,<br>  methods: &#123;<br>    reload () &#123;<br>      this.isRouterAlive &#x3D; false<br>      this.$nextTick(function () &#123;<br>        this.isRouterAlive &#x3D; true<br>      &#125;)<br>    &#125;<br>  &#125;<br>&#125;<br>&lt;&#x2F;script&gt;<br><br>&lt;script&gt;<br>&#x2F;&#x2F;页面使用<br>export default(&#123;<br>  inject: [&#39;reload&#39;], &#x2F;&#x2F; reload的使用 就好像继承一样<br>  name: &#39;CommModity&#39;,<br>  data: function () &#123;<br>    return &#123;<br>      tableData: [],<br>      Options: [],<br>      SelectValue: &#39;&#39;,<br>      needLoadingRequestCount: 0<br>    &#125;<br>  &#125;,<br>    methods: &#123;<br>        handleDelete (index, row) &#123;<br>          var that &#x3D; this<br>          &#x2F;&#x2F; elementui confirm 提示<br>          this.$confirm(&#39;此操作将永久删除此信息, 是否继续?&#39;, &#39;提示&#39;, &#123;<br>            confirmButtonText: &#39;确定&#39;,<br>            cancelButtonText: &#39;取消&#39;,<br>            type: &#39;warning&#39;<br>          &#125;).then(() &#x3D;&gt; &#123;<br>            that.$axios(&#123;<br>              method: &#39;GET&#39;,<br>              url: that.api.baseURL + &#39;Commodity&#x2F;DeleteComm?CommId&#x3D;&#39; + row.id<br>            &#125;).then(() &#x3D;&gt; &#123; &#x2F;&#x2F; 这里使用了ES6的语法<br>              that.$message(&#123;<br>                type: &#39;warning&#39;,<br>                message: &#39;删除成功&#39;<br>              &#125;)<br>              that.reload()<br>            &#125;).catch((error) &#x3D;&gt;<br>              console.log(error) &#x2F;&#x2F; 请求失败返回的数据<br>            )<br>          &#125;)<br>        &#125;<br>      &#125;,<br>    &#125;<br>&#125;<br>  <br>&lt;&#x2F;script&gt;<br></code></pre></td></tr></table></figure><p>15、局部Loading</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&#x2F;&#x2F; 打开loading<br>let loadingInstance &#x3D; Loading.service(&#123;<br>        lock: true,<br>        text: &#39;Loading...&#39;,<br>        background: &#39;rgba(0,0,0,0.1)&#39;,<br>        target: document.querySelector(&#39;#app div&#39;)<br>      &#125;)<br>loadingInstance.close() &#x2F;&#x2F; 关闭loading<br></code></pre></td></tr></table></figure><p>16、Vue-ElementUI-Admin框架的下载安装</p><p>git：<a href="https://github.com/PanJiaChen/vue-element-admin.git">https://github.com/PanJiaChen/vue-element-admin.git</a></p><p>下载node-sass：</p><p>npm config set sass_binary_site=<a href="https://npm.taobao.org/mirrors/node-sass">https://npm.taobao.org/mirrors/node-sass</a><br>重新 npm install</p><p>ssh设置：$ ssh-keygen -t rsa -C ‘2545664565@qq.com’</p><p>npm run dev</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>For-ABP</title>
    <link href="/2020/12/20/For-ABP/"/>
    <url>/2020/12/20/For-ABP/</url>
    
    <content type="html"><![CDATA[<h1 id="VS2019问题集合"><a href="#VS2019问题集合" class="headerlink" title="VS2019问题集合"></a>VS2019问题集合</h1><h2 id="vs2019-net-core的版本太低问题"><a href="#vs2019-net-core的版本太低问题" class="headerlink" title="vs2019.net core的版本太低问题"></a>vs2019.net core的版本太低问题</h2><p><a href="https://dotnet.microsoft.com/download/dotnet-core/3.1">https://dotnet.microsoft.com/download/dotnet-core/3.1</a><br><img src="/2020/12/20/For-ABP/1586222467469.png" alt="1586222467469"></p><p>数据库迁移<br>EF下的EF文件夹</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-keyword">public</span> DbSet&lt;UserTable&gt; UserTable &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br></code></pre></td></tr></table></figure><p>1、Add-Migration 表名</p><p>2、update-database </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> Abp.Application.Services;<br><span class="hljs-keyword">using</span> Abp.Application.Services.Dto;<br><span class="hljs-keyword">using</span> Abp.Domain.Repositories;<br><span class="hljs-keyword">using</span> GsfCoffee.CoffeeUser;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">GsfCoffee.Coffee</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">GsfInitAppService</span>: <span class="hljs-title">GsfCoffeeAppServiceBase</span>,<span class="hljs-title">IGsfInitAppService</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> IRepository&lt;UserTable&gt; _repository;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">GsfInitAppService</span>(<span class="hljs-params">IRepository&lt;UserTable&gt; repository</span>)</span> &#123;<br>            _repository = repository;<br>        &#125;<br><br>        <span class="hljs-built_in">int</span> IGsfInitAppService.Main &#123; <span class="hljs-keyword">get</span> =&gt; <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> NotImplementedException(); <span class="hljs-keyword">set</span> =&gt; <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> NotImplementedException(); &#125;<br>        [<span class="hljs-meta">HttpPost</span>]<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 注册信息</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Register</span>(<span class="hljs-params">UserTable _userTable</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">var</span> usertable = ObjectMapper.Map&lt;UserTable&gt;(_userTable);<br>            <span class="hljs-keyword">await</span> _repository.InsertAsync(usertable);<br>        &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 查询信息 登录</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;userid&quot;&gt;</span>用户名<span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;pwd&quot;&gt;</span>用户密码<span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;ListResultDto&lt;UserTable&gt;&gt; Login(<span class="hljs-built_in">string</span> userid,<span class="hljs-built_in">string</span> pwd)<br>        &#123;<br>            <span class="hljs-keyword">var</span> usertable = _repository<br>                .GetAll()<br>                .Where(c=&gt;c.Name == userid &amp;&amp; c.PassWord == pwd);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ListResultDto&lt;UserTable&gt;(ObjectMapper.Map&lt;List&lt;UserTable&gt;&gt;(usertable));<br>        &#125;<br>    &#125;<br>&#125;<br><br>    <br><br><br><span class="hljs-comment">//接口 也需要引用IApplicationService</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">IGsfInitAppService</span>: <span class="hljs-title">IApplicationService</span><br>    &#123;<br>       <span class="hljs-built_in">int</span> Main &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>    <br></code></pre></td></tr></table></figure><h2 id="VS2019-无法连接到Web服务器“IIS-Express”"><a href="#VS2019-无法连接到Web服务器“IIS-Express”" class="headerlink" title="VS2019 无法连接到Web服务器“IIS Express”"></a>VS2019 无法连接到Web服务器“IIS Express”</h2><p>解决方案：删除掉项目根文件夹下的<strong>隐藏</strong>文件.vs和.Git</p><p>跨域问题：<br><img src="/2020/12/20/For-ABP/1586242794838.png" alt="1586242794838"></p><p>目前的解决方案：<br>项目中的appsetting.json文件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c#">&#123;<br>  <span class="hljs-string">&quot;ConnectionStrings&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;Default&quot;</span>: <span class="hljs-string">&quot;Server=106.15.75.186; Database=GsfCoffeeDb; User=sa; Password=Dlj0622;&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;App&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;ServerRootAddress&quot;</span>: <span class="hljs-string">&quot;http://localhost:21021/&quot;</span>,<br>    <span class="hljs-string">&quot;ClientRootAddress&quot;</span>: <span class="hljs-string">&quot;http://localhost:4200/&quot;</span>,<br>    <span class="hljs-string">&quot;CorsOrigins&quot;</span>: <span class="hljs-string">&quot;http://localhost:4200,http://localhost:8080,http://localhost:8081,http://localhost:3000,http://106.15.75.186:8080&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;Authentication&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;JwtBearer&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;IsEnabled&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>,<br>      <span class="hljs-string">&quot;SecurityKey&quot;</span>: <span class="hljs-string">&quot;GsfCoffee_C421AAEE0D114E9C&quot;</span>,<br>      <span class="hljs-string">&quot;Issuer&quot;</span>: <span class="hljs-string">&quot;GsfCoffee&quot;</span>,<br>      <span class="hljs-string">&quot;Audience&quot;</span>: <span class="hljs-string">&quot;GsfCoffee&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>将发布后的appsetting.json文件中修改<br>“ServerRootAddress”: “<a href="http://localhost:21021/&quot;">http://localhost:21021/&quot;</a>,<br>将”<a href="http://localhost:21021/&quot;%E4%BF%AE%E6%94%B9%E4%B8%BA&quot;http://106.15.75.186:8080/&quot;">http://localhost:21021/&quot;修改为&quot;http://106.15.75.186:8080/&quot;</a><br>然后网站绑定的是两个网址106.15.75.186:8080/172.17.24.86:8080<br><img src="/2020/12/20/For-ABP/1586315688543.png" alt="1586315688543"></p><p>数据库创建触发器 修改数据时自动修改updatetime为当前时间</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--自动修改 “修改时间”</span><br><span class="hljs-keyword">Create</span> <span class="hljs-keyword">TRIGGER</span> [dbo].[update_UserTable_trigger]<br> <span class="hljs-keyword">ON</span> [dbo].[UserTable]<br> <span class="hljs-keyword">after</span> <span class="hljs-keyword">update</span><br> <span class="hljs-keyword">as</span> <br> <span class="hljs-keyword">declare</span> @<span class="hljs-keyword">id</span> <span class="hljs-built_in">int</span><br> <span class="hljs-keyword">begin</span><br> <span class="hljs-keyword">update</span> UserTable <span class="hljs-keyword">set</span> UpdateTime = SYSDATETIME() <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">ID</span> <span class="hljs-keyword">IN</span> (<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> <span class="hljs-keyword">ID</span> <span class="hljs-keyword">FROM</span> inserted)<br> <br> <span class="hljs-comment">--修改numbering最大值</span><br> <span class="hljs-keyword">Create</span> <span class="hljs-keyword">TRIGGER</span> [dbo].[<span class="hljs-built_in">number</span>]<br><span class="hljs-keyword">on</span> [dbo].[UserTable]<br><span class="hljs-keyword">after</span> <span class="hljs-keyword">insert</span><br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">declare</span> @<span class="hljs-keyword">num</span> <span class="hljs-built_in">int</span><br><span class="hljs-keyword">begin</span><br> <span class="hljs-keyword">select</span> @<span class="hljs-keyword">num</span>=<span class="hljs-keyword">max</span>(numbering) <span class="hljs-keyword">from</span> UserTable<br> <span class="hljs-keyword">update</span> UserTable <span class="hljs-keyword">set</span> numbering=@<span class="hljs-keyword">num</span>+<span class="hljs-number">1</span><br> <span class="hljs-keyword">where</span> <span class="hljs-keyword">ID</span> <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> <span class="hljs-keyword">ID</span> <span class="hljs-keyword">from</span> inserted)<br><span class="hljs-keyword">END</span><br></code></pre></td></tr></table></figure><h2 id="在iis上vs2019的Web部署"><a href="#在iis上vs2019的Web部署" class="headerlink" title="在iis上vs2019的Web部署"></a>在iis上vs2019的Web部署</h2><p>来源链接：<a href="https://www.cnblogs.com/ancm/p/11110200.html">https://www.cnblogs.com/ancm/p/11110200.html</a><br>1、服务器上下载Web Deploy<br>网址：<a href="https://www.iis.net/downloads/microsoft/web-deploy">https://www.iis.net/downloads/microsoft/web-deploy</a><br>.net core sdk 以及runtime 需要更新到3.1<br><a href="https://dotnet.microsoft.com/download/dotnet-core">https://dotnet.microsoft.com/download/dotnet-core</a><br>2、安装完成后<br><img src="/2020/12/20/For-ABP/1586594104604.png" alt="1586594104604"></p><p>3、打开服务web management service，iis管理器权限添加上管理员的名字<br>4、将防火墙打开一个入站规则端口：8172在阿里云后台管理控制台上也要打开端口8172<br>5、右键站点–&gt;部署–&gt;启用web deploy发布<br>6、vs2019 web发布<br><img src="/2020/12/20/For-ABP/1586596833497.png" alt="1586596833497"></p><p>验证连接出现对号就证明连接ok</p><h2 id="C-学习之路"><a href="#C-学习之路" class="headerlink" title="C#学习之路"></a>C#学习之路</h2><p><a href="https://mp.weixin.qq.com/s/gFWZ_txIVJX5xMAYxooR2w">https://mp.weixin.qq.com/s/gFWZ_txIVJX5xMAYxooR2w</a> 作者：我亦是行人</p><h2 id="ABP"><a href="#ABP" class="headerlink" title="ABP"></a>ABP</h2><p>[toc]</p><ul><li>路由：/api/TokenAuth/Authenticate</li><li>参数<br>PassWord<br>UserNameOrEmailAddress</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-comment">// 忽略这个API</span><br>[<span class="hljs-meta">ApiExplorerSettings(IgnoreApi=true)</span>]<br></code></pre></td></tr></table></figure><h3 id="ABP中获取Token的方法"><a href="#ABP中获取Token的方法" class="headerlink" title="ABP中获取Token的方法"></a>ABP中获取Token的方法</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> <span class="hljs-title">CreateAccessToken</span>(<span class="hljs-params">IEnumerable&lt;Claim&gt; claims, TimeSpan? expiration = <span class="hljs-literal">null</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">var</span> now = DateTime.UtcNow;<br><br>    <span class="hljs-keyword">var</span> jwtSecurityToken = <span class="hljs-keyword">new</span> JwtSecurityToken(<br>        issuer: _configuration.Issuer,<br>        audience: _configuration.Audience,<br>        claims: claims,<br>        notBefore: now,<br>        expires: now.Add(expiration ?? _configuration.Expiration),<br>        signingCredentials: _configuration.SigningCredentials<br>    );<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> JwtSecurityTokenHandler().WriteToken(jwtSecurityToken);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetEncryptedAccessToken</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> accessToken</span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> SimpleStringCipher.Instance.Encrypt(accessToken, AppConsts.DefaultPassPhrase);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Core：ValidationHelper-验证"><a href="#Core：ValidationHelper-验证" class="headerlink" title="Core：ValidationHelper 验证"></a>Core：ValidationHelper 验证</h3><h3 id="Swagger-UI显示-用户登录和注册"><a href="#Swagger-UI显示-用户登录和注册" class="headerlink" title="Swagger UI显示 用户登录和注册"></a>Swagger UI显示 用户登录和注册</h3><p><img src="/2020/12/20/For-ABP/abp1.png" alt="abp1"></p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ABP</tag>
      
      <tag>.net Core</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>For-Git</title>
    <link href="/2020/12/20/For-Git/"/>
    <url>/2020/12/20/For-Git/</url>
    
    <content type="html"><![CDATA[<h1 id="Git基础常用命令"><a href="#Git基础常用命令" class="headerlink" title="Git基础常用命令"></a>Git基础常用命令</h1><ul><li>git init . 初始化</li><li>git clone [url] 克隆</li><li>git add . 添加所有至待发送区</li><li>git commit -m [message] 添加标记</li><li>git push 更新</li><li>git status 查看状态</li><li>git shortlog -sn x 显示所有提交过的用户</li><li>git brach 查看本地分支</li><li>git brach -r 查看远程分支</li><li>git brach -a 查看本地加远程所有分支</li><li>git fetch origin master 取回远程的master分支</li></ul><hr><p>第一步在本地 仓库中 右键 打开git bash<br>然后git init 初始化<br>然后git add . + 网络git仓库路径<br>然后git status查看操作 状态 修改的什么<br>git commit “做了什么修改”<br>git push 上传</p><p>前端Git地址：<a href="https://github.com/Dylanjor/GsfCoffeeVue.git">https://github.com/Dylanjor/GsfCoffeeVue.git</a><br>后端Git地址：<a href="https://github.com/Dylanjor/GsfCoffee.git">https://github.com/Dylanjor/GsfCoffee.git</a></p><h3 id="本地ssh设置"><a href="#本地ssh设置" class="headerlink" title="本地ssh设置"></a>本地ssh设置</h3><p>$ ssh-keygen -t rsa -C ‘2545664565@qq.com’</p><h3 id="使用命令分别创建两个平台的公钥"><a href="#使用命令分别创建两个平台的公钥" class="headerlink" title="使用命令分别创建两个平台的公钥"></a>使用命令分别创建两个平台的公钥</h3><p>ssh-keygen -t rsa -C “<a href="mailto:&#120;&#120;&#120;&#x78;&#120;&#120;&#64;&#x78;&#x78;&#120;&#46;&#99;&#x6f;&#109;">&#120;&#120;&#120;&#x78;&#120;&#120;&#64;&#x78;&#x78;&#120;&#46;&#99;&#x6f;&#109;</a>“ -f “id_rsa_gitee”<br>ssh-keygen -t rsa -C “<a href="mailto:&#120;&#x78;&#120;&#x78;&#x78;&#x78;&#64;&#x78;&#120;&#x78;&#46;&#99;&#x6f;&#109;">&#120;&#x78;&#120;&#x78;&#x78;&#x78;&#64;&#x78;&#120;&#x78;&#46;&#99;&#x6f;&#109;</a>“ -f “id_rsa_github”</p><p><code>备注：若提示ssh-keygen 不是内部或外部命令，主要是没有找到ssh-keygen.exe，所以我们要将ssh-keygen.exe文件所在的目录配置到全局变量中去。</code></p><p>第一步：找到<code>C:\Program Files\Git\usr\bin</code>目录下的ssh-keygen.exe （就是其目录，不一定是C盘，具体看安装在哪个盘），然后复制其所在的路径地址</p><p>第二步：找到桌面计算机-&gt;右击属性–&gt;高级系统设置–&gt;环境变量–&gt;系统变量,找到Path变量，进行编辑，End到最后，输入分号，粘贴复制的ssh-keygen所在的路径，保存；</p><h3 id="配置不同的公钥"><a href="#配置不同的公钥" class="headerlink" title="配置不同的公钥"></a>配置不同的公钥</h3><p>Host github.com<br>    HostName github.com<br>    PreferredAuthentications publickey<br>    IdentityFile ~/.ssh/id_rsa</p><p>Host gitee.com<br>    HostName gitee.com<br>    PreferredAuthentications publickey<br>    IdentityFile ~/.ssh/id_rsa_gitee</p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>MarkDown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
